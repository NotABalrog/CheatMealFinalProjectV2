/**
 * Created by b on 2/14/2015.
 */
function Plan(e,a,l,t,n){return this.config=e,this.imperial=[],this.metric=[],this.imperialGraph=[],this.metricGraph=[],this.buildMetricPlan=function(){return this.metric=l.buildDayArray(this.metric),this.metric=a.predictChanges(this.metric),this},this.buildMetricGraph=function(){return this.metricGraph=t.plotGraphs(this.metric),this},this.convertMetricPlanToImperial=function(){return this.imperial=n.imperialOutput(this.metric),this},this.buildImperialGraph=function(){return this.imperialGraph=t.plotGraphs(this.imperial),this},this}function Day(){return this.date=null,this.dayNumber=null,this.isCheatDay=null,this.height=null,this.weight=null,this.gender=null,this.age=null,this.bodyFat=null,this.bmi=null,this.bmr=null,this.bodyFatMass=null,this.leanBodyMass=null,this.dailyCaloriesAvailableFromFat=null,this.dailyCalories=null,this.activityLevel=null,this.tdee=null,this.dailyCaloricDeficit=null,this.expectedWeightChange=null,this.expectedBodyFatMassChange=null,this.expectedLeanBodyMassChange=null,this}function Config(){var e={};return e.perferredUnits="metric",e.planName=null,e.dailyCalories=0,e.activityLevel=1,e.startDate=moment().format("L"),e.goalDate="06/02/2015",e.height=null,e.weight=null,e.gender=null,e.bodyFat=null,e.age=null,e.bmrCalcSelection="Mifflin St Jeor",e.caloriesPerKgFat=7714,e.caloriesPerKgMuscle=5510,e.caloriesAvailablePerKilogramFatPerDay=68.324,e.cheatDays=[],e}function UnitConverter(){function e(e){e.height=2.54*e.height/100,e.weight=.453592*e.weight,e.caloriesPerKgFat=e.caloriesPerKgFat/2.20462,e.caloriesPerKgMuscle=e.caloriesPerKgMuscle/2.20462,e.caloriesAvailablePerKilogramFatPerDay=e.caloriesAvailablePerKilogramFatPerDay/2.20462}function a(e){for(var a=[],l=0;l<e.length;l++){var t=new Day;t.date=e[l].date,t.dayNumber=e[l].dayNumber,t.isCheatDay=e[l].isCheatDay,t.bodyFat=e[l].bodyFat,t.dailyCaloriesAvailableFromFat=e[l].dailyCaloriesAvailableFromFat,t.age=e[l].age,t.gender=e[l].gender,t.bmi=e[l].bmi,t.bmr=e[l].bmr,t.dailyCalories=e[l].dailyCalories,t.dailyCaloricDeficit=e[l].dailyCaloricDeficit,t.activityLevel=e[l].activityLevel,t.tdee=e[l].tdee,console.log(e[l].height),t.height=.393701*e[l].height*100,t.weight=2.20462*e[l].weight,t.bodyFatMass=2.20462*e[l].bodyFatMass,t.leanBodyMass=2.20462*e[l].leanBodyMass,t.expectedBodyFatMassChange=2.20462*e[l].expectedBodyFatMassChange,t.expectedLeanBodyMassChange=2.20462*e[l].expectedLeanBodyMassChange,t.expectedWeightChange=2.20462*e[l].expectedWeightChange,a.push(t)}return console.log(a),a}return{imperialInput:e,imperialOutput:a}}function GraphPlotter(){function e(e){var t={};return t.xAxis=a(e.length),t.yAxis=l(e),t}function a(e){for(var a=[],l=0,t=0;e>t;t++)l++,a.push(l);return a}function l(e){var a={};a.bmi=[],a.bmr=[],a.weight=[],a.bodyFatMass=[],a.leanBodyMass=[],a.tdee=[],a.dailyCaloricDeficit=[],a.expectedWeightChange=[],a.expectedLeanBodyMassChange=[],a.expectedBodyFatMassChange=[];for(var l=0;l<e.length;l++)a.bmi.push(e[l].bmi),a.bmr.push(e[l].bmr),a.weight.push(e[l].weight),a.bodyFatMass.push(e[l].bodyFatMass),a.leanBodyMass.push(e[l].leanBodyMass),a.tdee.push(e[l].tdee),a.dailyCaloricDeficit.push(e[l].dailyCaloricDeficit),a.expectedWeightChange.push(e[l].expectedWeightChange),a.expectedLeanBodyMassChange.push(e[l].expectedLeanBodyMassChange),a.expectedBodyFatMassChange.push(e[l].expectedBodyFatMassChange);return console.log(a),a}return{plotGraphs:e}}function DateCalculator(e){function a(a){var i=l(e.startDate,e.goalDate),o=moment(new Date(e.startDate)),r=0;console.log("CONFIG IN BUILD DAY ARRAY"),console.log(e);for(var s=0;i>=s;s++){var c=new Day;c.date=t(o),c.dayNumber=r,c.dailyCalories=e.dailyCalories,c.activityLevel=e.activityLevel,c.height=e.height,c.gender=e.gender,c.age=e.age,c=n(c,e.cheatDays),a.push(c),r++,o=c.date}return a}function l(e,a){var l=moment(new Date(e)),t=moment(new Date(a)),n=t.diff(l,"days");return n}function t(e){var a=moment(new Date(e));return moment(new Date(a)).add(1,"days").format("L")}function n(e,a){for(var l=0;l<a.length;l++)if(a[l].date===e.date)return e.isCheatDay=!0,e.dailyCalories=a[l].dailyCalories,e.activityLevel=a[l].activityLevel,e;return e.isCheatDay=!1,e}return this.config=e,{buildDayArray:a}}function ChangeCalculator(e,a){function l(e){e[0]=n(e[0]);for(var a=0;a<e.length-1;a++)e[a+1]=t(e[a],e[a+1]);return e}function t(e,a){return a.weight=e.weight-e.expectedWeightChange,a.bodyFatMass=e.bodyFatMass-e.expectedBodyFatMassChange,a.leanBodyMass=e.leanBodyMass-e.expectedLeanBodyMassChange,a.bodyFat=s(a.weight,a.bodyFatMass),a=i(a)}function n(a){return console.log("today"),console.log(a),a.height=e.height,a.weight=e.weight,a.gender=e.gender,a.age=e.age,a.bodyFat=e.bodyFat,a.bodyFatMass=r(a.weight,a.bodyFat),a.leanBodyMass=o(a.weight,a.bodyFat),a=i(a)}function i(e){return e.bmi=c(e.height,e.weight),e.bmr=a.getBMR(e),e.bmr=a.getBMR(e),e.dailyCaloriesAvailableFromFat=u(e.bodyFatMass),e.tdee=g(e.bmr,e.activityLevel),e.dailyCaloricDeficit=p(e.dailyCalories,e.tdee),e.expectedWeightChange=d(e.dailyCaloricDeficit),e.expectedBodyFatMassChange=h(e.dailyCaloricDeficit,e.dailyCaloriesAvailableFromFat),e.expectedLeanBodyMassChange=f(e.dailyCaloricDeficit,e.dailyCaloriesAvailableFromFat),e}function o(e,a){var l=e*a;return e-l}function r(e,a){return e*a}function s(e,a){return a/e}function c(e,a){return a/(e*e)}function d(a){return a/e.caloriesPerKgFat}function g(e,a){return e*a}function p(e,a){return a-e}function u(a){return a*e.caloriesAvailablePerKilogramFatPerDay}function h(a,l){var t;return t=l>a?a/e.caloriesPerKgFat:l/e.caloriesPerKgFat}function f(a,l){var t=0;return a>l&&(t=(a-l)/e.caloriesPerKgMuscle),t}return this.config=e,{predictChanges:l}}function MifflinStJeor(){return this.getBMR=function(e){var a=0;return"male"===e.gender&&(a=9.99*e.weight+625*e.height-4.92*e.age+5),"female"===e.gender&&(a=9.99*e.weight+625*e.height-4.92*e.age-161),a},this}function KatchMcArdle(){return this.getBMR=function(e){var a=370+21.6*e.leanBodyMass;return a},this}function HarrisBenedict(){return this.getBMR=function(e){var a=0;return"male"===e.gender&&(a=66.5+13.75*e.weight+500*e.height-6.76*e.age),"female"===e.gender&&(a=655.1+9.563*e.weight+180*e.height-4.7*e.age),a},this}function Simulator(){function e(e){for(var l=[],t=new GraphPlotter,n=new UnitConverter,i=0;i<e.length;i++){var o=a(e[i].bmrCalcSelection),r=new ChangeCalculator(e[i],o),s=new DateCalculator(e[i]),c={};c=new Plan(e[i],r,s,t,n).buildMetricPlan().buildMetricGraph().convertMetricPlanToImperial().buildImperialGraph(),l.push(c)}return l}function a(e){return"Mifflin St Jeor"===e?new MifflinStJeor:"Harris Benedict"===e?new HarrisBenedict:"Katch McArdle"===e?new KatchMcArdle:new MifflinStJeor}return{run:e}}angular.module("cheatMealFinalProjectV2",["ngSanitize","ngResource","ui.router","chart.js","ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(e,a){e.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"}),a.otherwise("/")}]),angular.module("cheatMealFinalProjectV2").factory("Simulator",Simulator),angular.module("cheatMealFinalProjectV2").controller("MainCtrl",["$scope","Simulator","$log",function(e,a){function l(a){var l=new Config;l.id=i++,l.planName=a.planName,l.dailyCalories=a.dailyCalories,l.activityLevel=a.activityLevel,l.startDate=moment(new Date(a.startDate)).format("L"),l.goalDate=moment(new Date(a.goalDate)).format("L"),l.height=a.height,l.weight=a.weight,l.gender=a.gender,l.bodyFat=a.bodyFat,l.age=a.age,l.bmrCalcSelection=a.bmrCalcSelection,e.lastPlanModified=l,e.planConfigs.push(l),console.log("New plan")}function t(a){var l={};l.exists=!1,l.index=0;for(var t=0;t<e.planConfigs.length;t++)if(e.planConfigs[t].id===a.id)return l.exists=!0,l.index=t,l;return l}function n(){e.maxDate=e.lastPlanModified.goalDate,e.minDate=e.lastPlanModified.startDate}e.lastPlanModified={},e.planConfigs=[],e.config={},e.cheatDays={};var i=0;e.test=function(){e.config=new Config,e.config.id=i++,e.config.planName="test 1",e.config.dailyCalories=1500,e.config.activityLevel=1.4,e.config.startDate="01/13/2015",e.config.goalDate="04/13/2015",e.config.height=1.8288,e.config.weight=104,e.config.gender="male",e.config.bodyFat=.35,e.config.age=29},e.savePlan=function(a,o){if(e.submitted=!0,o){var r=t(a.config),s=r.index;console.log(s),r.exists?(console.log("existing plan"),e.planConfigs[s].id=i++,e.planConfigs[s].planName=e.config.planName,e.planConfigs[s].dailyCalories=e.config.dailyCalories,e.planConfigs[s].activityLevel=e.config.activityLevel,e.planConfigs[s].startDate=moment(new Date(e.config.startDate)).format("L"),e.planConfigs[s].goalDate=moment(new Date(e.config.goalDate)).format("L"),e.planConfigs[s].height=e.config.height,e.planConfigs[s].weight=e.config.weight,e.planConfigs[s].gender=e.config.gender,e.planConfigs[s].bodyFat=e.config.bodyFat,e.planConfigs[s].age=e.config.age,e.planConfigs[s].bmrCalcSelection=e.config.bmrCalcSelection,e.lastPlanModified=e.planConfigs[s]):(l(e.config),e.badSubmit=!1,e.submitted=!1),n(),e.lastPlanModified={},e.config={},e.cheatDays={}}else e.badSubmit=!0},e.addRecurringCheatDay=function(a){console.log("last plan modified");var l=Object.prototype.toString.call(e.lastPlanModified.startDate),i=Object.prototype.toString.call(e.config.planName);if("[object Undefined]"===l)return e.recurringCheatMealBadSubmitNoPlanSelected=!0,void console.log("No plan selected true");if("[object Undefined]"===i)return e.recurringCheatMealBadSubmitNoPlanSelected=!0,void console.log("bad input true");if(a===!1)e.recurringCheatMealBadSubmitInvalidInput=!0;else{console.log(e.lastPlanModified.planName),console.log("[object Undefined]"===l),console.log("ALLS GOOD RUNNING CONDITIONAL"),e.recurringCheatMealBadSubmitNoPlanSelected=!1,e.recurringCheatMealBadSubmitInvalidInput=!1;for(var o=t(e.lastPlanModified),r=o.index,s=moment(new Date(e.lastPlanModified.startDate)),c=moment(new Date(e.lastPlanModified.goalDate)),d=e.cheatDays.recurringCheatDayFrequency,g=e.cheatDays.recurringCheatDayCalories,p=s,u=!1;1!=u;){(p.isSame(c)||p.isAfter(c))&&(console.log("conditional reached"),u=!0);var h=new Day;h.date=p.add(d,"days").format("L"),h.dailyCalories=g,p=moment(new Date(h.date)),e.planConfigs[r].cheatDays.push(h),console.log("AFTER CHEAT DAY ADDED"),console.log(e.planConfigs)}n()}},e.addSingleCheatDay=function(){var a=t(e.lastPlanModified),l=a.index;if(a.exists){var n=e.dt,i=e.cheatDays.singleCheatDayCalories,o=new Day;o.date=moment(new Date(n)).format("L"),o.dailyCalories=i,e.planConfigs[l].cheatDays.push(o),console.log(e.planConfigs[l].cheatDays)}else console.log("Error at adding singleCheatDay: selected plan doesn't exist")},e.editPlan=function(a){for(var l=0;l<e.planConfigs.length;l++)e.planConfigs[l].id===a.config.id&&(e.config=e.planConfigs[l],e.lastPlanModified=e.planConfigs[l],console.log("Edit PLAN"),console.log(e.config),n())},e.clonePlan=function(a){var n=t(a),o=n.index;if(console.log(a),console.log(n),n.exists){var r=e.planConfigs[o];r.id=i++,l(r),console.log("plan cloned")}else console.log("clone plan error, no existing plan")},e.removePlan=function(a){var l=t(a),n=l.index;console.log(a),console.log(l),l.exists?(e.planConfigs.splice(n,1),console.log("plan removed")):console.log("remove plan error, no existing plan")};var o=[];e.run=function(){console.log("Plan Configs"),console.log(e.planConfigs),o=a.run(e.planConfigs),console.log("Our results"),console.log(o),e.data=[],e.series=[],e.labels=[];for(var l=0;l<o.length;l++)o[l].metricGraph.xAxis.length>e.labels.length&&(e.labels=o[l].metricGraph.xAxis);for(var t=0;t<o.length;t++)e.data.push(o[t].metricGraph.yAxis.weight),e.series.push(o[t].config.planName)},e.setBMRCalc=function(a){1===a&&(e.config.bmrCalcSelection="Mifflin St Jeor"),2===a&&(e.config.bmrCalcSelection="Katch McArdle"),3===a&&(e.config.bmrCalcSelection="Harris Benedict")},e.today=function(){e.dt=new Date},e.today(),e.clear=function(){e.dt=null},e.toggleMin=function(){e.minDate=e.minDate?null:new Date},e.toggleMin(),e.open=function(a){a.preventDefault(),a.stopPropagation(),e.opened=!0},e.dateOptions={formatYear:"yy",startingDay:1},e.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],e.format=e.formats[0]}]),angular.module("cheatMealFinalProjectV2").run(["$templateCache",function(e){e.put("app/main/main.html",'<div class="container" xmlns="http://www.w3.org/1999/html"><div class="row"><div class="panel panel-default"><div class="panel-body"><form name="planInput" class="form-horizontal" novalidate=""><div class="col-lg-4"><legend>About</legend><article><h4>Enter in your basic body and goal information and this project will help you visualize the impact of cheat meals on attaining your goals. Advanced weight loss calculator. Can use different calculation formula and see how they compare, also can plot out how cheat days impact weight loss/gain efforts. Use case: Use can enter in different calorie and diet plans and see how they compare on the graph below. All data is metric.</h4><h4>In order to view in a browser, open the dist file. To examine the code, please look in the zip file for the unminified code.</h4></article></div><fieldset class="col-lg-4"><legend>Step 1: Body Data</legend><div class="form-group"><label class="col-lg-3 control-label" for="planHeight">Height</label><div class="col-lg-9"><input id="planHeight" name="planHeight" type="text" placeholder="1.82" class="form-control input-md" ng-model="config.height" required=""> <span class="error" ng-show="planInput.planHeight.$error.required && !planInput.planHeight.$pristine && submitted">Please enter height</span> <span class="help-block">Height in meters</span></div></div><div class="form-group"><label class="col-lg-3 control-label" for="planWeight">Weight</label><div class="col-lg-9"><input id="planWeight" name="planWeight" type="number" placeholder="70" class="form-control input-md" ng-model="config.weight" required=""> <span class="error" ng-show="planInput.planWeight.$error.required && !planInput.planWeight.$pristine && submitted">Please enter height</span> <span class="help-block">Weight in kilograms</span></div></div><div class="form-group"><label class="col-lg-3 control-label" for="planGender">Gender</label><div class="col-lg-9"><input id="planGender" name="planGender" type="text" placeholder="male" class="form-control input-md" ng-model="config.gender" required=""> <span class="error" ng-show="planInput.planGender.$error.required && !planInput.planGender.$pristine && submitted">Please enter height</span> <span class="help-block">Male or Female</span></div></div><div class="form-group"><label class="col-lg-3 control-label" for="planBodyFat">Body Fat</label><div class="col-lg-9"><input id="planBodyFat" name="planBodyFat" type="text" placeholder=".35" class="form-control input-md" ng-model="config.bodyFat" required=""> <span class="error" ng-show="planInput.planBodyFat.$error.required && !planInput.planBodyFat.$pristine && submitted">Please enter height</span> <span class="help-block">In the format of decimal, bodyfat percentage. Ex: 20% = .20</span></div></div><div class="form-group"><label class="col-lg-3 control-label" for="planAge">Age</label><div class="col-lg-9"><input id="planAge" name="planAge" type="number" placeholder="25" class="form-control input-md" ng-model="config.age" required=""> <span class="error" ng-show="planInput.planAge.$error.required && !planInput.planAge.$pristine && submitted">Please enter height</span> <span class="help-block">Age in years</span></div></div></fieldset><fieldset class="col-lg-4"><legend>2. Plan Data</legend><div class="form-group"><label class="col-lg-3 control-label" for="planDataName">Plan name</label><div class="col-lg-9"><input id="planDataName" name="planDataName" type="text" placeholder="My Cheeto and kale diet" class="form-control input-md" ng-model="config.planName" required=""> <span class="error" ng-show="planInput.planDataName.$error.required && !planInput.planDataName.$pristine && submitted">Please enter height</span> <span class="help-block">A name to identify your current plan</span></div></div><div class="form-group"><label class="col-lg-3 control-label" for="planDataDailyCalories">Daily Calories</label><div class="col-lg-9"><input id="planDataDailyCalories" name="planDataDailyCalories" type="number" placeholder="1800" class="form-control input-md" ng-model="config.dailyCalories" required=""> <span class="error" ng-show="planInput.planBodyFat.$error.required && !planInput.planBodyFat.$pristine && submitted">Please enter height</span> <span class="help-block">Calories consumed on an average day</span></div></div><div class="form-group"><label class="col-lg-3 control-label" for="planActivityLevel">Activity Level</label><div class="col-lg-9"><input id="planActivityLevel" name="planActivityLevel" type="number" step="any" min="0" placeholder="1.4" class="form-control input-md" ng-model="config.activityLevel" required=""> <span class="error" ng-show="planInput.planBodyFat.$error.required && !planInput.planBodyFat.$pristine && submitted">Please enter height</span> <span class="help-block">Used to calculate total energy expenditure, select 1.2 for sedentary, 1.4 for moderately active to 1.8 for extremely active.</span></div></div><div class="form-group"><label class="col-lg-3 control-label" for="planStartDate">Start Date</label><div class="col-lg-9"><input id="planStartDate" name="planStartDate" type="text" placeholder="02/22/15" class="form-control input-md" ng-model="config.startDate" required=""> <span class="error" ng-show="planInput.planStartDate.$error.required && !planInput.planStartDate.$pristine && submitted">Please enter height</span> <span class="help-block">Start date of the plan</span></div></div><div class="form-group"><label class="col-lg-3 control-label" for="planGoalDate">Goal Date</label><div class="col-lg-9"><input id="planGoalDate" name="planGoalDate" type="text" placeholder="05/22/15" class="form-control input-md" ng-model="config.goalDate"> <span class="error" ng-show="planInput.planGoalDate.$error.required && !planInput.planGoalDate.$pristine && submitted">Please enter height</span> <span class="help-block">Total number of calories consumed</span></div></div><div class="form-group"><label class="col-lg-3 control-label">BMR Calculator Formula to use</label><div class="col-lg-9"><div class="input-group-btn"><div class="form-group"><label class="col-lg-3 control-label">BMR Calculator Formula to use</label><div class="btn-group btn-group-justified" role="group"><div class="btn-group" role="group"><button type="button" class="btn btn-default" ng-click="setBMRCalc(1)">Mifflin</button></div><div class="btn-group" role="group"><button type="button" class="btn btn-default" ng-click="setBMRCalc(2)">Katch</button></div><div class="btn-group" role="group"><button type="button" class="btn btn-default" ng-click="setBMRCalc(3)">Benedict</button></div></div></div></div><span class="help-block">Using: {{config.bmrCalcSelection}}</span></div></div><div class="form-group"><div class="col-lg-2"></div><div class="col-lg-6"><button id="test" name="test" class="btn btn-default" ng-click="test()"><span>Test</span></button></div><div class="col-lg-3"><button id="addPlanButton" name="addPlanButton" class="btn btn-primary" ng-click="savePlan(this, planInput.$valid)"><span>Save</span></button></div><div class="col-lg-12"><h4 ng-show="badSubmit">Not all required fields filled in, please check all inputs and try again</h4></div></div></fieldset></form></div></div><div class="row"><div class="col-lg-12"><div class="panel panel-default"><div class="panel-body"><div class="col-lg-4"><legend>Plans - Click edit plan to select a cheat day to add</legend><div ng-repeat="config in planConfigs"><div class="panel panel-default col-lg-12"><div class="planCard"><h4>{{config.planName}} with {{config.cheatDays.length}} cheat days</h4><button id="editPlan" name="editPlan" class="btn btn-primary" ng-click="editPlan(this)"><span>Edit</span></button> <button id="clonePlan" name="editPlan" class="btn btn-primary" ng-click="clonePlan(this.config)"><span>Clone</span></button> <button id="removePlan" name="removePlan" class="btn btn-primary" ng-click="removePlan(this.config)"><span>Remove</span></button></div></div></div><div class="btn-wrap"><button id="runAllPlans" name="runAllPlans" class="btn btn-success" ng-click="run()"><span>Run all plans</span></button></div></div><form name="cheatDaysInput" class="form-horizontal" novalidate=""><fieldset class="col-lg-4"><legend>3: Add recurring cheat day to: {{lastPlanModified.planName}}</legend><div class="form-group"><label class="col-lg-4 control-label" for="recurringCheatDayCalories">Calories</label><div class="col-lg-8"><input id="recurringCheatDayCalories" name="recurringCheatDayCalories" type="text" placeholder="" class="form-control input-md" ng-model="cheatDays.recurringCheatDayCalories" required=""> <span class="help-block">Calories consumed</span></div></div><div class="form-group"><label class="col-lg-4 control-label" for="recurringCheatDayFrequency">Frequency:</label><div class="col-lg-8"><input id="recurringCheatDayFrequency" name="recurringCheatDayFrequency" type="number" placeholder="" class="form-control input-md" ng-model="cheatDays.recurringCheatDayFrequency" required=""> <span class="help-block">frequency of this cheat meal, 7 is once a week, 30 is once a month.</span></div></div><div class="form-group"><div class="col-lg-4 col-centered"><button id="recurringCheatDayButton" name="recurringCheatDayButton" class="btn btn-primary" ng-click="addRecurringCheatDay(cheatDaysInput.$valid)">Add recurring cheat days</button></div><div class="col-lg-12"><h4 ng-show="recurringCheatMealBadSubmitInvalidInput">Not all required fields filled in. Please enter calories and frequency.</h4></div><div class="col-lg-12"><h4 ng-show="recurringCheatMealBadSubmitNoPlanSelected">No plan selected to add cheat day to. Please select a plan from the left.</h4></div></div></fieldset></form><form name="singleCheatDayInput" class="form-horizontal" novalidate=""><fieldset class="col-lg-4"><legend>4: Add single cheat day to: {{lastPlanModified.planName}}</legend><div class="form-group"><label class="col-lg-2 control-label" for="singleCheatDayCalories"></label><div class=""><datepicker class="col-lg-6" ng-model="dt" show-weeks="true" min-date="minDate" max-date="maxDate"></datepicker></div></div><div class="form-group"><label class="col-lg-4 control-label" for="singleCheatDayCalories">Calories</label><div class="col-lg-8"><input id="singleCheatDayCalories" name="singleCheatDayCalories" type="text" class="form-control input-md" ng-model="cheatDays.singleCheatDayCalories"> <span class="help-block">Calories consumed</span></div></div><div class="form-group"><div class="col-lg-4 col-centered"><button id="addSingleCheatDayButton" name="addSingleCheatDayButton" class="btn btn-primary" ng-click="addSingleCheatDay()"><span>Add single cheat day</span></button></div></div></fieldset></form></div></div></div></div><div class="row"><div class="col-lg-12"><div class="panel panel-default"><div class="panel-body"><canvas id="line" class="chart chart-line" data="data" labels="labels" legend="true" series="series" click="onClick"></canvas></div></div></div></div></div></div>')}]);